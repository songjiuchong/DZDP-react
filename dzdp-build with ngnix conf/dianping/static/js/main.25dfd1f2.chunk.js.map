{"version":3,"sources":["redux/modules/entities/orders.js","utils/request.js","redux/middleware/api.js","redux/modules/entities/products.js","utils/url.js","utils/createReducer.js","redux/modules/entities/keywords.js","redux/modules/entities/shops.js","redux/modules/login.js","redux/modules/entities/comments.js","redux/modules/detail.js","redux/modules/search.js","redux/modules/user.js","redux/modules/home.js","redux/modules/purchase.js","components/ErrorToast/index.js","redux/modules/app.js","utils/AsyncComponent.js","containers/PrivateRoute/index.js","containers/App/index.js","redux/modules/entities/index.js","redux/modules/index.js","redux/store.js","index.js"],"names":["schema","name","id","TO_PAY_TYPE","AVAILABLE_TYPE","REFUND_TYPE","types","DELETE_ORDER","ADD_COMMENT","ADD_ORDER","orderIdCounter","actions","deleteOrder","orderId","type","addComment","commentId","addOrder","order","normalReducer","createReducer","reducer","state","action","restOrders","getAllOrders","entities","orders","headers","Headers","handleResponse","url","response","status","json","console","error","Promise","reject","message","FETCH_DATA","fetchData","endpoint","fetch","method","then","catch","err","data","normalizeData","kvObj","ids","Array","isArray","forEach","item","push","fetchDataMiddleware","store","next","callAPI","Error","length","every","actionWith","finalAction","requestType","successType","failureType","getProductDetail","product","products","detail","purchaseNotes","getProductById","getUrls","getProductList","path","rowIndex","pageSize","getShopById","getPopularKeywords","getRelatedKeywords","keyword","getRelatedShops","keywordId","getOrders","getKeywordById","keywords","getAllKeywords","getAllShops","shops","initialState","username","localStorage","getItem","password","isFetching","login","dispatch","getState","loginRequest","resolve","setTimeout","loginSuccess","setItem","loginFailure","logout","removeItem","setUsername","setPassword","getUsername","getPassword","isLogin","comment","relatedShop","loadProductDetail","fetchProductDetail","loadShopById","fetchShopById","productSchema","shopSchema","combineReducers","getProduct","getRelatedShop","createSelector","shopId","nearestShop","inputText","popularKeywords","relatedKeywords","historyKeywords","searchedShopsByKeyword","loadPopularKeywords","search","fetchPopularKeywords","loadRelatedKeywords","text","fetchRelatedKeywords","loadRelatedShops","fetchRelatedShops","setInputText","clearInputText","addHistoryKeyword","clearHistoryKeywords","keywordSchema","relatedKeywordsByText","concat","searchedShops","aciton","filter","map","getInputText","relatedKeywordsObjs","trim","getHistoryKeywords","getHistoryKeywordsId","getSearchedShops","keywordIds","relatedShops","getCurrentKeyword","keywordEle","typeToKey","fetched","toPayIds","availableIds","refundIds","currentTab","currentOrder","isDeleting","isCommenting","stars","loadOrders","user","fetchOrders","setCurrentTab","index","removeOrder","deleteOrderRequest","deleteOrderSuccess","orderActions","showDeleteDialog","hideDeleteDialog","showCommentArea","hideCommentArea","setComment","setStars","submitComment","postCommentRequest","commentObj","Date","content","postCommentSuccess","commentActions","orderSchema","removeOrderId","key","orderTypes","getCurrentTab","tabIndex","userOrders","getDeletingOrderId","getCommentingOrderId","getCurrentOrderComment","getCurrentOrderStars","params","loadLikes","home","likes","pageCount","fetchLikes","loadDiscounts","discounts","fetchDiscounts","getLikes","getDiscounts","getPageCountOfLikes","quantity","showTip","setOrderQuantity","closeTip","submitOrder","productId","purchase","totalPrice","currentPrice","toFixed","text1","text2","validityPeriod","title","shop","orderPicUrl","picture","channel","statusText","getQuantity","getTipStatus","getTotalPrice","ErrorToast","msg","this","props","className","timer","clearError","clearTimeout","Component","initialSatete","getError","app","asyncComponent","importComponent","component","mod","setState","default","C","PrivateRoute","rest","render","to","pathname","from","location","connect","Home","AsyncComponent","Search","Login","ProductDetail","SearchResult","User","Purchase","App","appActions","basename","bindActionCreators","rootReducer","comments","createStore","applyMiddleware","thunk","api","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25dfd1f2.chunk.js","sourcesContent":["import createReducer from \"../../../utils/createReducer\";\r\n\r\nexport const schema = {\r\n  name: \"orders\",\r\n  id: \"id\",\r\n};\r\n\r\nexport const USED_TYPE = 1; //已消费\r\nexport const TO_PAY_TYPE = 2; //待付款\r\nexport const AVAILABLE_TYPE = 3; //可使用\r\nexport const REFUND_TYPE = 4; //退款\r\n\r\nexport const types = {\r\n  DELETE_ORDER: \"ORDERS/DELETE_ORDER\",\r\n  ADD_COMMENT: \"ORDERS/ADD_COMMENT\",\r\n  ADD_ORDER: \"ORDERS/ADD_ORDER\",\r\n};\r\n\r\nlet orderIdCounter = 10;\r\n\r\nexport const actions = {\r\n  deleteOrder: (orderId) => ({\r\n    type: types.DELETE_ORDER,\r\n    orderId,\r\n  }),\r\n  addComment: (orderId, commentId) => ({\r\n    type: types.ADD_COMMENT,\r\n    orderId,\r\n    commentId,\r\n  }),\r\n  addOrder: (order) => {\r\n    const orderId = `o-${orderIdCounter++}`;\r\n    return {\r\n      type: types.ADD_ORDER,\r\n      orderId,\r\n      order: { ...order, id: orderId },\r\n    };\r\n  },\r\n};\r\n\r\nconst normalReducer = createReducer(schema.name);\r\nconst reducer = (state = {}, action) => {\r\n  if (action.type === types.ADD_COMMENT) {\r\n    return {\r\n      ...state,\r\n      [action.orderId]: {\r\n        ...state[action.orderId],\r\n        commentId: action.commentId,\r\n      },\r\n    };\r\n  } else if (action.type === types.ADD_ORDER) {\r\n    return {\r\n      ...state,\r\n      [action.orderId]: action.order,\r\n    };\r\n  } else if (action.type === types.DELETE_ORDER) {\r\n    const { [action.orderId]: deleteOrder, ...restOrders } = state;\r\n    return restOrders;\r\n  } else {\r\n    return normalReducer(state, action);\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\n\r\nexport const getOrderById = (state, id) => state.entities.orders[id];\r\n\r\nexport const getAllOrders = state => state.entities.orders;","const headers = new Headers({\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n})\r\n\r\nfunction get(url) {\r\n    return fetch(url,{\r\n        method: \"GET\",\r\n        headers: headers\r\n    }).then(response => {\r\n        return handleResponse(url, response);\r\n    }).catch(err => {\r\n        console.error(`Request failed. Url= ${url}. Message=${err}`);\r\n        return Promise.reject({error: {message: \"Request failed.\"}});\r\n    })\r\n}\r\n\r\nfunction post(url, data) {\r\n    return fetch(url,{\r\n        method: \"POST\",\r\n        headers: headers,\r\n        body: data\r\n    }).then(response => {\r\n        return handleResponse(url, response);\r\n    }).catch(err => {\r\n        console.error(`Request failed. Url= ${url}. Message=${err}`);\r\n        return Promise.reject({error: {message: \"Request failed.\"}});\r\n    })\r\n}\r\n\r\nfunction handleResponse(url, response) {\r\n    if(response.status === 200) {\r\n        return response.json();\r\n    } else {\r\n        console.error(`Request failed. Url= ${url}.`)\r\n        return Promise.reject({error: {message: \"Request failed due to server error\"}});\r\n    }\r\n}\r\n\r\nexport {get,post}","import { get } from \"../../utils/request\"\r\nexport const FETCH_DATA = 'FETCH_DATA'\r\n\r\nconst fetchDataMiddleware = store => next => action => {\r\n    const callAPI = action[FETCH_DATA]\r\n    if(typeof callAPI === 'undefined') {\r\n        return next(action)\r\n    }\r\n\r\n    const { endpoint, schema, types} = callAPI\r\n\r\n    if(typeof endpoint !== 'string') {\r\n        throw new Error('endpoint must be string')\r\n    }\r\n    if(!schema) {\r\n        throw new Error('must exist')\r\n    }\r\n    if(!Array.isArray(types) && types.length !==3) {\r\n        throw new Error('type error')\r\n    }\r\n    if(!types.every(type => typeof type === 'string')) {\r\n        throw new Error('type error')\r\n    }\r\n\r\n    const actionWith = data => {\r\n        const finalAction = {...action, ...data}\r\n        delete finalAction[FETCH_DATA]\r\n        return finalAction\r\n    }\r\n\r\n    const [requestType, successType, failureType] = types\r\n    next(actionWith({type: requestType}))\r\n    return fetchData(endpoint, schema).then(\r\n        response => next(actionWith({\r\n            type: successType,\r\n            response\r\n        })),\r\n        error => next(actionWith({\r\n            type: failureType,\r\n            error: error.message || '获取数据失败'\r\n        }))\r\n    )\r\n}\r\n\r\n//执行网络请求\r\nconst fetchData = (endpoint, schema) => {\r\n    return get(endpoint).then(data => {\r\n        return normalizeData(data, schema)\r\n    })\r\n}\r\n\r\n//根据schema, 将获取的数据扁平化处理\r\nconst normalizeData = (data, schema) => {\r\n    const {id, name} = schema\r\n    let kvObj = {}\r\n    let ids = []\r\n    if(Array.isArray(data)){\r\n        data.forEach(item => {\r\n            kvObj[item[id]] = item\r\n            ids.push(item[id])\r\n        })\r\n    } else {\r\n        kvObj[data[id]] = data\r\n        ids.push(data[id])\r\n    }\r\n    return {\r\n        [name]: kvObj,\r\n        ids\r\n    }\r\n}\r\n\r\nexport default fetchDataMiddleware\r\n\r\n","import createReducer from \"../../../utils/createReducer\"\r\n\r\nexport const schema = {\r\n    name: 'products',\r\n    id: 'id',\r\n}\r\n\r\nconst reducer = createReducer(schema.name);\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\nexport const getProductDetail = (state, id) => {\r\n    const product = state.entities.products[id];\r\n    return product && product.detail && product.purchaseNotes ? product : null\r\n}\r\n\r\nexport const getProductById = (state, id) => {\r\n    return state.entities.products[id];\r\n}","const getUrls = {\r\n  getProductList: (path, rowIndex, pageSize) =>\r\n    `/mock/products/${path}.json?rowIndex=${rowIndex}&pageIsze=${pageSize}`,\r\n  getProductDetail: (id) => `/mock/product_detail/${id}.json`,\r\n  getShopById: (id) => `/mock/shops/${id}.json`,\r\n  getPopularKeywords: () => `/mock/keywords/popular.json`,\r\n  getRelatedKeywords: (keyword) => `/mock/keywords/related.json?keyword=${keyword}`,\r\n  getRelatedShops: (keywordId) => `/mock/shops/related.json?keyword=${keywordId}`,\r\n  getOrders: () => `/mock/orders/orders.json`,\r\n};\r\n\r\nexport default getUrls;\r\n","const createReducer = (name) => {\r\n    return (state = {}, action) => {\r\n        if(action.response && action.response[name]){\r\n            return {...state, ...action.response[name]}\r\n        }\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default createReducer","import createReducer from \"../../../utils/createReducer\"\r\n\r\nexport const schema = {\r\n    name: 'keywords',\r\n    id: 'id'\r\n}\r\n\r\nconst reducer = createReducer(schema.name)\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\nexport const getKeywordById = (state, id) => {\r\n    return state.entities.keywords[id]\r\n}\r\n\r\nexport const getAllKeywords = state => {\r\n    return state.entities.keywords\r\n}","import createReducer from \"../../../utils/createReducer\"\r\n\r\nexport const schema = {\r\n    name: 'shops',\r\n    id: 'id'\r\n}\r\n\r\nconst reducer = createReducer(schema.name)\r\n\r\nexport default reducer;\r\n\r\n// selectors\r\nexport const getShopById = (state, id) => {\r\n    const shop = state.entities.shops[id];\r\n    return shop;\r\n}\r\n\r\nexport const getAllShops = state => state.entities.shops;","const initialState = {\r\n  username: localStorage.getItem('username') || '',\r\n  password: \"\",\r\n  isFetching: false,\r\n  status: localStorage.getItem('login') || false, //登录状态\r\n};\r\n\r\n//action types\r\nexport const types = {\r\n  LOGIN_REQUEST: \"LOGIN/LOGIN_REQUEST\",\r\n  LOGIN_SUCCESS: \"LOGIN/LOGIN_SUCCESS\",\r\n  LOGIN_FAILURE: \"LOGIN/LOGIN_FAILURE\",\r\n  LOGOUT: \"LOGIN/LOGOUT\",\r\n  SET_USERNAME: \"LOGIN/SET_USERNAME\",\r\n  SET_PASSWORD: \"LOGIN/SET_PASSWORD\",\r\n};\r\n\r\n//action creators\r\nexport const actions = {\r\n  login: () => {\r\n    return (dispatch, getState) => {\r\n      const { username, password } = getState().login;\r\n      if (\r\n        !(username && username.length > 0 && password && password.length > 0)\r\n      ) {\r\n        return dispatch(loginFailure(\"用户名和密码不能为空!\"));\r\n      }\r\n      dispatch(loginRequest());\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          dispatch(loginSuccess());\r\n          localStorage.setItem(\"username\", username);\r\n          localStorage.setItem(\"login\", true);\r\n          resolve();\r\n        }, 1000);\r\n      });\r\n    };\r\n  },\r\n  logout: () => {\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"login\");\r\n    return { type: types.LOGOUT };\r\n  },\r\n  setUsername: (username) => ({\r\n    type: types.SET_USERNAME,\r\n    username,\r\n  }),\r\n  setPassword: (password) => ({\r\n    type: types.SET_PASSWORD,\r\n    password,\r\n  }),\r\n};\r\n\r\nconst loginRequest = () => ({\r\n  type: types.LOGIN_REQUEST,\r\n});\r\n\r\nconst loginSuccess = () => ({\r\n  type: types.LOGIN_SUCCESS,\r\n});\r\n\r\nconst loginFailure = (error) => ({\r\n  type: types.LOGIN_FAILURE,\r\n  error,\r\n});\r\n\r\n//reducer\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.LOGIN_REQUEST:\r\n      return { ...state, isFetching: true };\r\n    case types.LOGIN_SUCCESS:\r\n      return { ...state, isFetching: false, status: true };\r\n    case types.LOGIN_FAILURE:\r\n      return { ...state, isFetching: false };\r\n    case types.LOGOUT:\r\n      return { ...state, status: false, username: \"\", password: \"\" };\r\n    case types.SET_USERNAME:\r\n      return { ...state, username: action.username };\r\n    case types.SET_PASSWORD:\r\n      return { ...state, password: action.password };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\nexport const getUsername = (state) => {\r\n  return state.login.username;\r\n};\r\n\r\nexport const getPassword = (state) => {\r\n  return state.login.password;\r\n};\r\n\r\nexport const isLogin = (state) => {\r\n  return state.login.status;\r\n};\r\n","import createReducer from \"../../../utils/createReducer\"\r\n\r\n\r\nexport const schema = {\r\n    name: \"comments\",\r\n    id: \"id\"\r\n}\r\n\r\nexport const types = {\r\n    ADD_COMMENT: \"COMMENT/ADD_COMMENT\"\r\n}\r\n\r\nexport const actions = {\r\n    addComment: comment => ({\r\n        type: types.ADD_COMMENT,\r\n        comment\r\n    })\r\n}\r\n\r\nconst normalReducer = createReducer(schema.name);\r\n\r\nconst reducer = (state = {}, action) => {\r\n    if(action.type === types.ADD_COMMENT) {\r\n        return {...state, [action.comment.id]: action.comment}\r\n    } else {\r\n        return normalReducer(state, action);\r\n    }\r\n}\r\n\r\nexport default reducer;","import { FETCH_DATA } from \"../middleware/api\";\r\nimport { schema as shopSchema, getShopById, getAllShops } from \"./entities/shops\";\r\nimport { schema as productSchema, getProductDetail, getProductById } from \"./entities/products\";\r\nimport { combineReducers } from \"redux\";\r\nimport url from \"../../utils/url\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const types = {\r\n  FETCH_PRODUCT_DETAIL_REQUEST: \"DETAIL/FETCH_PRODUCT_DETAIL_REQUEST\",\r\n  FETCH_PRODUCT_DETAIL_SUCCESS: \"DETAIL/FETCH_PRODUCT_DETAIL_SUCCESS\",\r\n  FETCH_PRODUCT_DETAIL_FAILURE: \"DETAIL/FETCH_PRODUCT_DETAIL_FAILURE\",\r\n  FETCH_SHOP_REQUEST: \"DETAIL/FETCH_SHOP_REQUEST\",\r\n  FETCH_SHOP_SUCCESS: \"DETAIL/FETCH_SHOP_SUCCESS\",\r\n  FETCH_SHOP_FAILURE: \"DETAIL/FETCH_SHOP_FAILURE\",\r\n};\r\n\r\nconst initialState = {\r\n  product: {\r\n    isFetching: false,\r\n    id: null,\r\n  },\r\n  relatedShop: {\r\n    isFetching: false,\r\n    id: null,\r\n  },\r\n};\r\n\r\nexport const actions = {\r\n  loadProductDetail: (id) => {\r\n    return (dispatch, getState) => {\r\n    //   const product = getProductDetail(getState(), id);\r\n    //   if (product) {\r\n    //     return dispatch(fetchProductDetailSuccess(id));\r\n    //   }\r\n      const endpoint = url.getProductDetail(id);\r\n      return dispatch(fetchProductDetail(endpoint, id));\r\n    };\r\n  },\r\n  loadShopById: (id) => {\r\n    return (dispatch, getState) => {\r\n    //   const shop = getShopById(getState(), id);\r\n    //   if (shop) {\r\n    //     return dispatch(fetchShopSuccess(id));\r\n    //   }\r\n      const endpoint = url.getShopById(id);\r\n      return dispatch(fetchShopById(endpoint, id));\r\n    };\r\n  },\r\n\r\n};\r\n\r\n// const fetchProductDetailSuccess = (id) => ({\r\n//   type: types.FETCH_PRODUCT_DETAIL_SUCCESS,\r\n//   id,\r\n// });\r\n\r\n// const fetchShopSuccess = (id) => ({\r\n//   type: types.FETCH_SHOP_SUCCESS,\r\n//   id,\r\n// });\r\n\r\nconst fetchProductDetail = (endpoint, id) => ({\r\n  [FETCH_DATA]: {\r\n    types: [\r\n      types.FETCH_PRODUCT_DETAIL_REQUEST,\r\n      types.FETCH_PRODUCT_DETAIL_SUCCESS,\r\n      types.FETCH_PRODUCT_DETAIL_FAILURE,\r\n    ],\r\n    endpoint,\r\n    schema: productSchema,\r\n  },\r\n  id,\r\n});\r\n\r\nconst fetchShopById = (endpoint, id) => ({\r\n  [FETCH_DATA]: {\r\n    types: [\r\n      types.FETCH_SHOP_REQUEST,\r\n      types.FETCH_SHOP_SUCCESS,\r\n      types.FETCH_SHOP_FAILURE,\r\n    ],\r\n    endpoint,\r\n    schema: shopSchema,\r\n  },\r\n  id,\r\n});\r\n\r\nconst product = (state = initialState.product, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_PRODUCT_DETAIL_REQUEST:\r\n      return { ...state, isFetching: true };\r\n    case types.FETCH_PRODUCT_DETAIL_SUCCESS:\r\n      return { ...state, id: action.id, isFetching: false };\r\n    case types.FETCH_PRODUCT_DETAIL_FAILURE:\r\n      return { ...state, id: null, isFetching: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst relatedShop = (state = initialState.relatedShop, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_SHOP_REQUEST:\r\n      return { ...state, isFetching: true };\r\n    case types.FETCH_SHOP_SUCCESS:\r\n      return { ...state, id: action.id, isFetching: false };\r\n    case types.FETCH_SHOP_FAILURE:\r\n      return { ...state, id: null, isFetching: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  product,\r\n  relatedShop,\r\n});\r\nexport default reducer;\r\n\r\n// selectors\r\nexport const getProduct = (state, id) => {\r\n    return getProductDetail(state, id);\r\n}\r\n\r\nexport const getRelatedShop = createSelector([getProductById, getAllShops], (product, shops) => {\r\n  const shopId = product ? product.nearestShop : null;\r\n  if(shopId) {\r\n    return shops[shopId];\r\n  }\r\n  return null;\r\n})","import url from \"../../utils/url\";\r\nimport { FETCH_DATA } from \"../middleware/api\";\r\nimport { schema as keywordSchema, getKeywordById, getAllKeywords } from \"./entities/keywords\";\r\nimport { schema as shopSchema, getShopById, getAllShops } from \"./entities/shops\";\r\nimport { combineReducers } from \"redux\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const types = {\r\n  FETCH_POPULAR_KEYWORDS_REQUEST: \"SEARCH/FETCH_POPULAR_KEYWORDS_REQUEST\",\r\n  FETCH_POPULAR_KEYWORDS_SUCCESS: \"SEARCH/FETCH_POPULAR_KEYWORDS_SUCCESS\",\r\n  FETCH_POPULAR_KEYWORDS_FAILURE: \"SEARCH/FETCH_POPULAR_KEYWORDS_FAILURE\",\r\n  FETCH_RELATED_KEYWORDS_REQUEST: \"SEARCH/FETCH_RELATED_KEYWORDS_REQUEST\",\r\n  FETCH_RELATED_KEYWORDS_SUCCESS: \"SEARCH/FETCH_RELATED_KEYWORDS_SUCCESS\",\r\n  FETCH_RELATED_KEYWORDS_FAILURE: \"SEARCH/FETCH_RELATED_KEYWORDS_FAILURE\",\r\n  SET_INPUT_TEXT: \"SEARCH/SET_INPUT_TEXT\",\r\n  CLEAR_INPUT_TEXT: \"SEARCH/CLEAR_INPUT_TEXT\",\r\n  ADD_HISTORY_KEYWORD: \"SEARCH/ADD_HISTORY_KEYWORD\",\r\n  CLEAR_HISTORY_KEYWORDS: \"SEARCH/CLEAR_HISTORY_KEYWORDS\",\r\n  FETCH_SHOPS_REQUEST: \"SEARCH/FETCH_SHOPS_REQUEST\",\r\n  FETCH_SHOPS_SUCCESS: \"SEARCH/FETCH_SHOPS_SUCCESS\",\r\n  FETCH_SHOPS_FAILURE: \"SEARCH/FETCH_SHOPS_FAILURE\",\r\n};\r\n\r\nconst initialState = {\r\n  inputText: \"\",\r\n  popularKeywords: {\r\n    isFetching: false,\r\n    ids: [],\r\n  },\r\n\r\n  /**\r\n   * relatedKeywords对象结构:\r\n   * {\r\n   *  '火锅': {\r\n   *      isFetching: false,\r\n   *      ids: []\r\n   *   }\r\n   * }\r\n   */\r\n  relatedKeywords: {},\r\n\r\n  historyKeywords: [], //保存关键词ids\r\n  /**\r\n   * searchedShopsByKeyword对象结构:\r\n   * {\r\n   *  keywordId: {\r\n   *      isFetching: false,\r\n   *      ids: []\r\n   *   }\r\n   * }\r\n   */\r\n  searchedShopsByKeyword: {},\r\n};\r\n\r\nexport const actions = {\r\n  loadPopularKeywords: () => {\r\n    return (dispatch, getState) => {\r\n      const { ids } = getState().search.popularKeywords;\r\n      if (ids.length > 0) {\r\n        return null;\r\n      }\r\n      const endpoint = url.getPopularKeywords();\r\n      return dispatch(fetchPopularKeywords(endpoint));\r\n    };\r\n  },\r\n  loadRelatedKeywords: (text) => {\r\n    return (dispatch, getState) => {\r\n      const { relatedKeywords } = getState().search;\r\n      if (relatedKeywords[text]) {\r\n        return null;\r\n      }\r\n      const endpoint = url.getRelatedKeywords(text);\r\n      return dispatch(fetchRelatedKeywords(text, endpoint));\r\n    };\r\n  },\r\n  loadRelatedShops: (keywordId) => {\r\n    return (dispatch, getState) => {\r\n      const { searchedShopsByKeyword } = getState().search;\r\n      if (searchedShopsByKeyword[keywordId]) {\r\n        return null;\r\n      }\r\n      const endpoint = url.getRelatedShops(keywordId);\r\n      return dispatch(fetchRelatedShops(keywordId, endpoint));\r\n    };\r\n  },\r\n  setInputText: (text) => ({\r\n    type: types.SET_INPUT_TEXT,\r\n    text,\r\n  }),\r\n  clearInputText: () => ({\r\n    type: types.CLEAR_INPUT_TEXT,\r\n  }),\r\n  addHistoryKeyword: (keywordId) => ({\r\n    type: types.ADD_HISTORY_KEYWORD,\r\n    text: keywordId,\r\n  }),\r\n  clearHistoryKeywords: () => ({\r\n    type: types.CLEAR_HISTORY_KEYWORDS,\r\n  }),\r\n};\r\n\r\nconst fetchPopularKeywords = (endpoint) => ({\r\n  [FETCH_DATA]: {\r\n    types: [\r\n      types.FETCH_POPULAR_KEYWORDS_REQUEST,\r\n      types.FETCH_POPULAR_KEYWORDS_SUCCESS,\r\n      types.FETCH_POPULAR_KEYWORDS_FAILURE,\r\n    ],\r\n    endpoint,\r\n    schema: keywordSchema,\r\n  },\r\n});\r\n\r\nconst fetchRelatedKeywords = (text, endpoint) => ({\r\n  [FETCH_DATA]: {\r\n    types: [\r\n      types.FETCH_RELATED_KEYWORDS_REQUEST,\r\n      types.FETCH_RELATED_KEYWORDS_SUCCESS,\r\n      types.FETCH_RELATED_KEYWORDS_FAILURE,\r\n    ],\r\n    endpoint,\r\n    schema: keywordSchema,\r\n  },\r\n  text,\r\n});\r\n\r\nconst fetchRelatedShops = (text, endpoint) => ({\r\n  [FETCH_DATA]: {\r\n    types: [\r\n      types.FETCH_SHOPS_REQUEST,\r\n      types.FETCH_SHOPS_SUCCESS,\r\n      types.FETCH_SHOPS_FAILURE,\r\n    ],\r\n    endpoint,\r\n    schema: shopSchema,\r\n  },\r\n  text,\r\n});\r\n\r\n//reducer\r\nconst popularKeywords = (state = initialState.popularKeywords, aciton) => {\r\n  switch (aciton.type) {\r\n    case types.FETCH_POPULAR_KEYWORDS_REQUEST:\r\n      return { ...state, isFetching: true };\r\n    case types.FETCH_POPULAR_KEYWORDS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        ids: state.ids.concat(aciton.response.ids),\r\n      };\r\n    case types.FETCH_POPULAR_KEYWORDS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst relatedKeywords = (state = initialState.relatedKeywords, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_RELATED_KEYWORDS_REQUEST:\r\n    case types.FETCH_RELATED_KEYWORDS_SUCCESS:\r\n    case types.FETCH_RELATED_KEYWORDS_FAILURE:\r\n      return {\r\n        ...state,\r\n        [action.text]: relatedKeywordsByText(state[action.text], action),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst relatedKeywordsByText = (\r\n  state = {\r\n    isFetching: false,\r\n    ids: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case types.FETCH_RELATED_KEYWORDS_REQUEST:\r\n      return { ...state, isFetching: true };\r\n    case types.FETCH_RELATED_KEYWORDS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        ids: state.ids.concat(action.response.ids),\r\n      };\r\n    case types.FETCH_RELATED_KEYWORDS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst searchedShopsByKeyword = (\r\n  state = initialState.searchedShopsByKeyword,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case types.FETCH_SHOPS_REQUEST:\r\n    case types.FETCH_SHOPS_SUCCESS:\r\n    case types.FETCH_SHOPS_FAILURE:\r\n      return {\r\n        ...state,\r\n        [action.text]: searchedShops(state[action.text], action),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst searchedShops = (\r\n  state = {\r\n    isFetching: false,\r\n    ids: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case types.FETCH_SHOPS_REQUEST:\r\n      return { ...state, isFetching: true };\r\n    case types.FETCH_SHOPS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        ids: action.response.ids,\r\n      };\r\n    case types.FETCH_SHOPS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst inputText = (state = initialState.inputText, action) => {\r\n  switch (action.type) {\r\n    case types.SET_INPUT_TEXT:\r\n      return action.text;\r\n    case types.CLEAR_INPUT_TEXT:\r\n      return \"\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst historyKeywords = (state = initialState.historyKeywords, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_HISTORY_KEYWORD:\r\n      const data = state.filter((item) => {\r\n        if (item !== action.text) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      return [action.text, ...data];\r\n    case types.CLEAR_HISTORY_KEYWORDS:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  popularKeywords,\r\n  relatedKeywords,\r\n  inputText,\r\n  historyKeywords,\r\n  searchedShopsByKeyword,\r\n});\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\nexport const getPopularKeywords = state => {\r\n  return state.search.popularKeywords.ids.map((id) => {\r\n    return getKeywordById(state, id);\r\n  });\r\n};\r\n\r\nexport const getInputText = state => {\r\n  return state.search.inputText;\r\n};\r\n\r\nconst getRelatedKeywordsObjs = state => state.search.relatedKeywords;\r\n\r\n\r\nexport const getRelatedKeywords = createSelector([getInputText, getRelatedKeywordsObjs, getAllKeywords], (text, relatedKeywordsObjs, keywords) => {\r\n  if (!text || text.trim().length === 0) {\r\n    return [];\r\n  }\r\n  const relatedKeywords = relatedKeywordsObjs[text];\r\n  if (!relatedKeywords) {\r\n    return [];\r\n  }\r\n  return relatedKeywords.ids.map((id) => {\r\n    return keywords[id];\r\n  });\r\n})\r\n\r\nexport const getHistoryKeywords = state => {\r\n  return state.search.historyKeywords.map((id) => {\r\n    return getKeywordById(state, id);\r\n  });\r\n};\r\n\r\nconst getHistoryKeywordsId = state => state.search.historyKeywords;\r\nconst getSearchedShopsByKeyword = state => state.search.searchedShopsByKeyword;\r\nexport const getSearchedShops = createSelector([getHistoryKeywordsId, getSearchedShopsByKeyword, getAllShops], (keywordIds, searchedShopsByKeyword, shops) => {\r\n  const keywordId = keywordIds[0];\r\n  const relatedShops = searchedShopsByKeyword[keywordId];\r\n  if(!relatedShops) {\r\n    return []\r\n  }\r\n  return relatedShops.ids.map(id => {\r\n    return shops[id];\r\n  })\r\n});\r\n\r\nexport const getCurrentKeyword = createSelector([getHistoryKeywordsId, getAllKeywords], (keywordIds, keywords) => {\r\n  const keywordId = keywordIds[0];\r\n  if(!keywordId) {\r\n    return \"\";\r\n  }\r\n  const keywordEle = keywords[keywordId];\r\n  return keywordEle ? keywordEle.keyword : \"\";\r\n})","import url from \"../../utils/url\";\r\nimport { FETCH_DATA } from \"../middleware/api\";\r\nimport {\r\n  schema as orderSchema,\r\n  TO_PAY_TYPE,\r\n  AVAILABLE_TYPE,\r\n  REFUND_TYPE,\r\n  getAllOrders,\r\n  types as orderTypes,\r\n  actions as orderActions,\r\n} from \"./entities/orders\";\r\nimport { actions as commentActions } from \"./entities/comments\";\r\nimport { combineReducers } from \"redux\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst typeToKey = {\r\n  [TO_PAY_TYPE]: \"toPayIds\",\r\n  [AVAILABLE_TYPE]: \"availableIds\",\r\n  [REFUND_TYPE]: \"refundIds\",\r\n};\r\n\r\nconst initialState = {\r\n  orders: {\r\n    isFetching: false,\r\n    fetched: false,\r\n    ids: [],\r\n    toPayIds: [], //待付款的订单\r\n    availableIds: [], //可使用的订单\r\n    refundIds: [], //退款订单\r\n  },\r\n  currentTab: 0,\r\n  currentOrder: {\r\n    id: null,\r\n    isDeleting: false,\r\n    isCommenting: false,\r\n    comment: \"\",\r\n    stars: 0,\r\n  },\r\n};\r\n\r\nexport const types = {\r\n  FETCH_ORDERS_REQUEST: \"USER/FETCH_ORDERS_REQUEST\",\r\n  FETCH_ORDERS_SUCCESS: \"USER/FETCH_ORDERS_SUCCESS\",\r\n  FETCH_ORDERS_FAILURE: \"USER/FETCH_ORDERS_FAILURE\",\r\n  SET_CURRENT_TAB: \"USER/SET_CURRENT_TAB\",\r\n  DELETE_ORDERS_REQUEST: \"USER/DELETE_ORDERS_REQUEST\",\r\n  DELETE_ORDERS_SUCCESS: \"USER/DELETE_ORDERS_SUCCESS\",\r\n  DELETE_ORDERS_FAILURE: \"USER/DELETE_ORDERS_FAILURE\",\r\n  SHOW_DELETE_DIALOG: \"USER/SHOW_DELETE_DIALOG\",\r\n  HIDE_DELETE_DIALOG: \"USER/HIDE_DELETE_DIALOG\",\r\n  SHOW_COMMENT_AREA: \"USER/SHOW_COMMENT_AREA\",\r\n  HIDE_COMMENT_AREA: \"USER/HIDE_COMMENT_AREA\",\r\n  SET_COMMENT: \"USER/SET_COMMENT\",\r\n  SET_STARS: \"USER/SET_STARS\",\r\n  POST_COMMENT_REQUEST: \"USER/POST_COMMENT_REQUEST\",\r\n  POST_COMMENT_SUCCESS: \"USER/POST_COMMENT_SUCCESS\",\r\n  POST_COMMENT_FAILURE: \"USER/POST_COMMENT_FAILURE\",\r\n};\r\n\r\n//actions;\r\nexport const actions = {\r\n  loadOrders: () => {\r\n    return (dispatch, getState) => {\r\n      const { fetched } = getState().user.orders;\r\n      if (fetched) {\r\n        return null;\r\n      }\r\n      const endpoint = url.getOrders();\r\n      return dispatch(fetchOrders(endpoint));\r\n    };\r\n  },\r\n  setCurrentTab: (index) => ({\r\n    type: types.SET_CURRENT_TAB,\r\n    index,\r\n  }),\r\n  removeOrder: () => {\r\n    return (dispatch, getState) => {\r\n      const { id } = getState().user.currentOrder;\r\n      if (id) {\r\n        dispatch(deleteOrderRequest());\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            dispatch(deleteOrderSuccess(id));\r\n            dispatch(orderActions.deleteOrder(id));\r\n            resolve();\r\n          }, 500);\r\n        });\r\n      }\r\n    };\r\n  },\r\n  showDeleteDialog: (orderId) => ({\r\n    type: types.SHOW_DELETE_DIALOG,\r\n    orderId,\r\n  }),\r\n  hideDeleteDialog: () => ({\r\n    type: types.HIDE_DELETE_DIALOG,\r\n  }),\r\n  showCommentArea: (orderId) => ({\r\n    type: types.SHOW_COMMENT_AREA,\r\n    orderId,\r\n  }),\r\n  hideCommentArea: () => ({\r\n    type: types.HIDE_COMMENT_AREA,\r\n  }),\r\n  setComment: (comment) => ({\r\n    type: types.SET_COMMENT,\r\n    comment,\r\n  }),\r\n  setStars: (stars) => ({\r\n    type: types.SET_STARS,\r\n    stars,\r\n  }),\r\n  submitComment: () => {\r\n    return (dispatch, getState) => {\r\n      dispatch(postCommentRequest());\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          const {\r\n            currentOrder: { id, stars, comment },\r\n          } = getState().user;\r\n          const commentObj = {\r\n            id: +new Date(), //模拟服务端成功保存数据后返回了一个commentId\r\n            stars: stars,\r\n            content: comment,\r\n          };\r\n          dispatch(postCommentSuccess());\r\n          dispatch(commentActions.addComment(commentObj));\r\n          dispatch(orderActions.addComment(id, commentObj.id));\r\n          resolve();\r\n        }, 500);\r\n      });\r\n    };\r\n  },\r\n};\r\n\r\nconst postCommentRequest = () => ({\r\n  type: types.POST_COMMENT_REQUEST,\r\n});\r\n\r\nconst postCommentSuccess = () => ({\r\n  type: types.POST_COMMENT_SUCCESS,\r\n});\r\n\r\nconst deleteOrderRequest = () => ({\r\n  type: types.DELETE_ORDERS_REQUEST,\r\n});\r\n\r\nconst deleteOrderSuccess = (orderId) => ({\r\n  type: types.DELETE_ORDERS_SUCCESS,\r\n  orderId,\r\n});\r\n\r\nconst fetchOrders = (endpoint) => ({\r\n  [FETCH_DATA]: {\r\n    types: [\r\n      types.FETCH_ORDERS_REQUEST,\r\n      types.FETCH_ORDERS_SUCCESS,\r\n      types.FETCH_ORDERS_FAILURE,\r\n    ],\r\n    endpoint,\r\n    schema: orderSchema,\r\n  },\r\n});\r\n\r\n//reducers\r\nconst orders = (state = initialState.orders, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_ORDERS_REQUEST:\r\n      return { ...state, isFetching: true };\r\n    case types.FETCH_ORDERS_SUCCESS:\r\n      const toPayIds = action.response.ids.filter(\r\n        (id) => action.response.orders[id].type === TO_PAY_TYPE\r\n      );\r\n      const availableIds = action.response.ids.filter(\r\n        (id) => action.response.orders[id].type === AVAILABLE_TYPE\r\n      );\r\n      const refundIds = action.response.ids.filter(\r\n        (id) => action.response.orders[id].type === REFUND_TYPE\r\n      );\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        fetched: true,\r\n        ids: state.ids.concat(action.response.ids),\r\n        toPayIds: state.toPayIds.concat(toPayIds),\r\n        availableIds: state.availableIds.concat(availableIds),\r\n        refundIds: state.refundIds.concat(refundIds),\r\n      };\r\n    case orderTypes.DELETE_ORDER:\r\n    case types.DELETE_ORDERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ids: removeOrderId(state, \"ids\", action.orderId),\r\n        toPayIds: removeOrderId(state, \"toPayIds\", action.orderId),\r\n        availableIds: removeOrderId(state, \"availableIds\", action.orderId),\r\n        refundIds: removeOrderId(state, \"refundIds\", action.orderId),\r\n      };\r\n    case orderTypes.ADD_ORDER:\r\n      const { order } = action;\r\n      const key = typeToKey[order.type];\r\n      return key\r\n        ? {\r\n            ...state,\r\n            ids: [order.id].concat(state.ids),\r\n            [key]: [order.id].concat(state[key]),\r\n          }\r\n        : {\r\n            ...state,\r\n            ids: [order.id].concat(state.ids),\r\n          };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst removeOrderId = (state, key, orderId) => {\r\n  return state[key].filter((id) => {\r\n    return id !== orderId;\r\n  });\r\n};\r\n\r\nconst currentTab = (state = initialState.currentTab, action) => {\r\n  switch (action.type) {\r\n    case types.SET_CURRENT_TAB:\r\n      return action.index;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst currentOrder = (state = initialState.currentOrder, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_DELETE_DIALOG:\r\n      return {\r\n        ...state,\r\n        id: action.orderId,\r\n        isDeleting: true,\r\n      };\r\n    case types.HIDE_DELETE_DIALOG:\r\n    case types.DELETE_ORDERS_SUCCESS:\r\n    case types.DELETE_ORDERS_FAILURE:\r\n    case types.HIDE_COMMENT_AREA:\r\n    case types.POST_COMMENT_SUCCESS:\r\n    case types.POST_COMMENT_FAILURE:\r\n      return initialState.currentOrder;\r\n    case types.SHOW_COMMENT_AREA:\r\n      return {\r\n        ...state,\r\n        id: action.orderId,\r\n        isCommenting: true,\r\n      };\r\n    case types.SET_COMMENT:\r\n      return { ...state, comment: action.comment };\r\n    case types.SET_STARS:\r\n      return { ...state, stars: action.stars };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  orders,\r\n  currentTab,\r\n  currentOrder,\r\n});\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\nexport const getCurrentTab = (state) => state.user.currentTab;\r\n\r\nconst getUserOrders = (state) => state.user.orders;\r\n\r\nexport const getOrders = createSelector(\r\n  [getCurrentTab, getUserOrders, getAllOrders],\r\n  (tabIndex, userOrders, orders) => {\r\n    const key = [\"ids\", \"toPayIds\", \"availableIds\", \"refundIds\"][tabIndex];\r\n    userOrders[key].map((id) => {\r\n      return orders[id];\r\n    });\r\n  }\r\n);\r\n\r\nexport const getDeletingOrderId = (state) => {\r\n  return state.user.currentOrder && state.user.currentOrder.isDeleting\r\n    ? state.user.currentOrder.id\r\n    : null;\r\n};\r\n\r\nexport const getCommentingOrderId = (state) => {\r\n  return state.user.currentOrder && state.user.currentOrder.isCommenting\r\n    ? state.user.currentOrder.id\r\n    : null;\r\n};\r\n\r\nexport const getCurrentOrderComment = (state) => {\r\n  return state.user.currentOrder ? state.user.currentOrder.comment : \"\";\r\n};\r\n\r\nexport const getCurrentOrderStars = (state) => {\r\n  return state.user.currentOrder ? state.user.currentOrder.stars : 0;\r\n};\r\n","import url from \"../../utils/url\"\r\nimport { FETCH_DATA } from \"../middleware/api\"\r\nimport { schema } from \"./entities/products\"\r\nimport {combineReducers} from \"redux\"\r\n\r\nexport const types = {\r\n    FETCH_LIKES_REQUEST: \"HOME/FETCH_LIKES_REQUEST\", //获取猜你喜欢请求\r\n    FETCH_LIKES_SUCCEED: \"HOME/FETCH_LIKES_SUCCEED\", //获取猜你喜欢请求成功\r\n    FETCH_LIKES_FAILURE: \"HOME/FETCH_LIKES_FAILURE\", //获取猜你喜欢请求失败\r\n    FETCH_DISCOUNTS_REQUEST: \"HOME/FETCH_DISCOUNTS_REQUEST\", //获取超值特惠请求\r\n    FETCH_DISCOUNTS_SUCCEED: \"HOME/FETCH_DISCOUNTS_SUCCEED\", //获取超值特惠请求成功\r\n    FETCH_DISCOUNTS_FAILURE: \"HOME/FETCH_DISCOUNTS_FAILURE\", //获取超值特惠请求失败\r\n}\r\n\r\n//请求参数使用到的常量\r\nexport const params = {\r\n    PATH_LIKES: 'likes',\r\n    PATH_DISCOUNTS: 'discounts',\r\n    PAGE_SIZE_LIKES: 5,\r\n    PAGE_SIZE_DISCOUNTS: 3, \r\n}\r\n\r\nexport const actions = {\r\n    loadLikes: () => {\r\n        return (dispatch, getState) => {\r\n            const {pageCount} = getState().home.likes;\r\n            const rowIndex = pageCount * params.PAGE_SIZE_LIKES;\r\n            const endpoint = url.getProductList(params.PATH_LIKES, rowIndex, params.PAGE_SIZE_LIKES)\r\n            return dispatch(fetchLikes(endpoint))\r\n        }\r\n    },\r\n    //加载特惠商品\r\n    loadDiscounts: () => {\r\n        return (dispatch, getState) => {\r\n            const {ids} = getState().home.discounts;\r\n            if(ids.length > 0) {\r\n                return null;\r\n            }\r\n            const endpoint = url.getProductList(params.PATH_DISCOUNTS, 0, params.PAGE_SIZE_DISCOUNTS)\r\n            return dispatch(fetchDiscounts(endpoint))\r\n        }\r\n    }\r\n}\r\n\r\nconst fetchLikes = (endpoint) => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_LIKES_REQUEST,\r\n            types.FETCH_LIKES_SUCCEED,\r\n            types.FETCH_LIKES_FAILURE\r\n        ],\r\n        endpoint,\r\n        schema\r\n    }\r\n})\r\n\r\nconst fetchDiscounts = (endpoint) => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_DISCOUNTS_REQUEST,\r\n            types.FETCH_DISCOUNTS_SUCCEED,\r\n            types.FETCH_DISCOUNTS_FAILURE\r\n        ],\r\n        endpoint,\r\n        schema\r\n    }\r\n})\r\n\r\nconst initialState = {\r\n    likes: {\r\n        isFetching: false,\r\n        pageCount: 0,\r\n        ids: [],\r\n    },\r\n    discounts: {\r\n        isFetching: false,\r\n        ids: [],\r\n    }\r\n}\r\n\r\n//猜你喜欢子reducer\r\nconst likes = (state = initialState.likes, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_LIKES_REQUEST: \r\n            return {...state, isFetching: true}\r\n        case types.FETCH_LIKES_SUCCEED:\r\n            return {...state, isFetching: false, pageCount:state.pageCount + 1, ids: state.ids.concat(action.response.ids)}\r\n        case types.FETCH_LIKES_FAILURE:\r\n            return {...state, isFetching: false}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n//特惠商品子reducer\r\nconst discounts = (state = initialState.discounts, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_DISCOUNTS_REQUEST: \r\n            return {...state, isFetching: true}\r\n        case types.FETCH_DISCOUNTS_SUCCEED:\r\n            return {...state, isFetching: false, ids: state.ids.concat(action.response.ids)}\r\n        case types.FETCH_DISCOUNTS_FAILURE:\r\n            return {...state, isFetching: false}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst reducer = combineReducers({\r\n    likes, discounts\r\n})\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\nexport const getLikes = state => {\r\n    return state.home.likes.ids.map((id) => {\r\n        return state.entities.products[id]\r\n    })\r\n}\r\n\r\nexport const getDiscounts = state => {\r\n    return state.home.discounts.ids.map((id) => {\r\n        return state.entities.products[id]\r\n    })\r\n}\r\n\r\nexport const getPageCountOfLikes = state => {\r\n    return state.home.likes.pageCount\r\n}","import { createSelector } from \"reselect\";\r\nimport { getProductDetail } from \"./entities/products\";\r\nimport { actions as orderActions, AVAILABLE_TYPE } from \"./entities/orders\";\r\n\r\nexport const types = {\r\n  SET_ORDER_QUANTITY: \"PURCHASE/SET_ORDER_QUANTITY\",\r\n  CLOSE_TIP: \"PURCHASE/CLOSE_TIP\",\r\n  SUBMIT_ORDER_REQUEST: \"PURCHASE/SUBMIT_ORDER_REQUEST\",\r\n  SUBMIT_ORDER_SUCCESS: \"PURCHASE/SUBMIT_ORDER_SUCCESS\",\r\n  SUBMIT_ORDER_FAILURE: \"PURCHASE/SUBMIT_ORDER_FAILURE\",\r\n};\r\n\r\nconst initialState = {\r\n  quantity: 1,\r\n  showTip: false,\r\n};\r\n\r\n//action creators\r\nexport const actions = {\r\n  setOrderQuantity: (quantity) => ({\r\n    type: types.SET_ORDER_QUANTITY,\r\n    quantity,\r\n  }),\r\n  closeTip: () => ({\r\n    type: types.CLOSE_TIP,\r\n  }),\r\n  submitOrder: (productId) => {\r\n    return (dispatch, getState) => {\r\n      dispatch({ type: types.SUBMIT_ORDER_REQUEST });\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          const product = getProductDetail(getState(), productId);\r\n          const quantity = getState().purchase.quantity;\r\n          const totalPrice = (product.currentPrice * quantity).toFixed(1);\r\n          const text1 = `${quantity}张 | 总价： ${totalPrice}`;\r\n          const text2 = product.validityPeriod;\r\n          const order = {\r\n            title: `${product.shop}:${product.product}`,\r\n            orderPicUrl: product.picture,\r\n            channel: \"团购\",\r\n            statusText: \"待消费\",\r\n            text: [text1, text2],\r\n            type: AVAILABLE_TYPE,\r\n          };\r\n          dispatch(orderActions.addOrder(order));\r\n          dispatch({ type: types.SUBMIT_ORDER_SUCCESS });\r\n          resolve();\r\n        }, 500);\r\n      });\r\n    };\r\n  },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_ORDER_QUANTITY:\r\n      return { ...state, quantity: action.quantity };\r\n    case types.CLOSE_TIP:\r\n      return { ...state, showTip: false };\r\n    case types.SUBMIT_ORDER_SUCCESS:\r\n      return { ...state, showTip: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\nexport const getQuantity = (state) => {\r\n  return state.purchase.quantity;\r\n};\r\n\r\nexport const getTipStatus = (state) => {\r\n  return state.purchase.showTip;\r\n};\r\n\r\nexport const getProduct = (state, id) => {\r\n  return getProductDetail(state, id);\r\n};\r\n\r\nexport const getTotalPrice = createSelector(\r\n  [getProduct, getQuantity],\r\n  (product, quantity) => {\r\n    if(!product) {\r\n      return 0;\r\n    }\r\n    return (product.currentPrice * quantity).toFixed(1);\r\n  }\r\n);\r\n","import React, { Component } from 'react';\r\nimport \"./style.css\";\r\n\r\nclass ErrorToast extends Component {\r\n    render() {\r\n        const {msg} = this.props;\r\n        return (\r\n            <div className=\"errorToast\">\r\n                <div className=\"errorToast_text\">\r\n                    {msg}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timer = setTimeout(() => {\r\n            this.props.clearError();\r\n        },3000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.timer){\r\n            clearTimeout(this.timer);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorToast;","const initialSatete = {\r\n    error: null\r\n}\r\n\r\nexport const types = {\r\n    CLEAR_ERROR: \"APP/CLEAR_ERROR\"\r\n}\r\n\r\nexport const actions = {\r\n    clearError: ()=> ({\r\n        type: types.CLEAR_ERROR\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialSatete, action) => {\r\n    const {type, error} = action\r\n    if(type === types.CLEAR_ERROR){\r\n        return {...state, error: null}\r\n    } else if(error) {\r\n        return {...state, error: error}\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\nexport const getError = (state) => {\r\n    return state.app.error\r\n}","import React, {Component} from \"react\"\r\n\r\nexport default function asyncComponent(importComponent) {\r\n    class AsyncComponent extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                component: null\r\n            }\r\n        }\r\n\r\n        componentDidMount() {\r\n            importComponent().then((mod) => {\r\n                this.setState({\r\n                    component: mod.default\r\n                })\r\n            })\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n    return AsyncComponent;\r\n}","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {isLogin} from \"../../redux/modules/login\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass PrivateRoute extends Component {\r\n  render() {\r\n    const { component: Component, login, ...rest } = this.props;\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) => {\r\n          return login ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        }}\r\n      ></Route>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        login: isLogin(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(PrivateRoute);\r\n","import React, { Component } from \"react\";\nimport ErrorToast from \"../../components/ErrorToast\";\nimport { actions as appActions, getError } from \"../../redux/modules/app\";\nimport AsyncComponent from \"../../utils/AsyncComponent\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"../PrivateRoute\";\n\nconst Home = AsyncComponent(() => import(\"../Home\"));\nconst Search = AsyncComponent(() => import(\"../Search\"));\nconst Login = AsyncComponent(() => import(\"../Login\"));\nconst ProductDetail = AsyncComponent(() => import(\"../ProductDetail\"));\nconst SearchResult = AsyncComponent(() => import(\"../SearchResult\"));\nconst User = AsyncComponent(() => import(\"../User\"));\nconst Purchase = AsyncComponent(() => import(\"../Purchase\"));\n\nclass App extends Component {\n  render() {\n    const {\n      error,\n      appActions: { clearError },\n    } = this.props;\n    return (\n      <div className=\"App\">\n        <Router basename=\"/dianping\">\n          <Switch>\n            <Route path=\"/Login\" component={Login}></Route>\n            <PrivateRoute path=\"/user\" component={User}></PrivateRoute>\n            <Route path=\"/detail/:id\" component={ProductDetail}></Route>\n            <Route path=\"/search\" component={Search}></Route>\n            <Route path=\"/search_result\" component={SearchResult}></Route>\n            <PrivateRoute path=\"/purchase/:id\" component={Purchase}></PrivateRoute>\n            <Route path=\"/\" component={Home}></Route>\n          </Switch>\n        </Router>\n        {error ? <ErrorToast msg={error} clearError={clearError} /> : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    error: getError(state),\n  };\n};\n\nconst mapDispatchoProps = (dispatch) => {\n  return {\n    appActions: bindActionCreators(appActions, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchoProps)(App);\n","import {combineReducers} from \"redux\";\r\nimport products from \"./products\";\r\nimport shops from \"./shops\";\r\nimport orders from \"./orders\";\r\nimport comments from \"./comments\";\r\nimport keywords from \"./keywords\";\r\n\r\nconst rootReducer = combineReducers({\r\n    products,\r\n    shops,\r\n    orders,\r\n    comments,\r\n    keywords,\r\n})\r\n\r\nexport default rootReducer;","import { combineReducers } from \"redux\";\r\nimport entities from \"./entities\";\r\nimport home from \"./home\";\r\nimport detail from \"./detail\";\r\nimport app from \"./app\";\r\nimport search from \"./search\";\r\nimport login from \"./login\";\r\nimport user from \"./user\";\r\nimport purchase from \"./purchase\";\r\n\r\nconst rootReducer = combineReducers({\r\n    entities,\r\n    home,\r\n    detail,\r\n    app,\r\n    search,\r\n    login,\r\n    user,\r\n    purchase\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./modules\";\r\nimport thunk from \"redux-thunk\"\r\nimport api from \"./middleware/api\"\r\n\r\nlet store;\r\n\r\nif(process.env.NODE_ENV !== \"production\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__){\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n    store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, api)));\r\n} else {\r\n    store = createStore(rootReducer, applyMiddleware(thunk, api));\r\n}\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './containers/App';\nimport store from './redux/store';\nimport './style.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}